[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "BindingRMSD"
version = "0.1.0"
authors = [
    {name = "Jaemin Sim", email = "sjm0775@snu.ac.kr"}
]
description = "Protein-ligand Binding RMSD prediction method using Graph Neural Networks"
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Chemistry",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11", 
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
keywords = ["bioinformatics", "drug discovery", "molecular docking", "graph neural networks", "RMSD prediction"]
dependencies = [
    # Core dependencies with updated secure versions
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "torch>=2.4.0",
    "dgl>=2.4.0",
    "rdkit>=2024.3.5",
    
    # HTTP and networking - updated for security
    "urllib3>=2.2.3",  # Fixed recent vulnerabilities
    "requests>=2.32.3",  # Fixed CVE-2024-35195
    "certifi>=2024.8.30",
    
    # Template and web security
    "jinja2>=3.1.4",  # Note: Has known SSTI issues, but latest available
    "markupsafe>=2.1.5",
    
    # File processing and parsing
    "pillow>=10.4.0",  # Fixed CVE-2024-28219
    "pyyaml>=6.0.2",  # Fixed arbitrary code execution
    
    # Utilities and support
    "click>=8.1.7",
    "tqdm>=4.66.5",
    "packaging>=24.1",
    "filelock>=3.16.1",
    "fsspec>=2024.9.0",
    "six>=1.16.0",
    
    # Scientific computing
    "scipy>=1.14.1",
    "networkx>=3.3",
    "sympy>=1.13.3",
    "mpmath>=1.3.0",
    
    # Date and time
    "python-dateutil>=2.9.0",
    "pytz>=2024.2",
    "tzdata>=2024.2",
    
    # Development and validation
    "pydantic>=2.9.2",
    "pydantic-core>=2.23.4",
    "typing-extensions>=4.12.2",
    
    # System utilities
    "psutil>=6.0.0",
    "charset-normalizer>=3.3.2",
    "idna>=3.10",
    
    # GPU acceleration (optional)
    "triton>=3.0.0; platform_machine != 'aarch64'",  # Conditional install
    
    # Specialized chemistry tools
    "meeko>=0.5.0",  # For AutoDock file processing
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "isort>=5.12.0", 
    "mypy>=1.5.0",
    "safety>=3.0.0",
    "bandit>=1.7.5",
    "pre-commit>=3.0.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.3.0",
    "coverage>=7.3.0",
]

[project.scripts]
bindingrmsd-inference = "bindingrmsd.inference:main"

[project.urls]
Homepage = "https://github.com/eightmm/BindingRMSD"
Repository = "https://github.com/eightmm/BindingRMSD"
Documentation = "https://github.com/eightmm/BindingRMSD#readme"
"Bug Reports" = "https://github.com/eightmm/BindingRMSD/issues"
Changelog = "https://github.com/eightmm/BindingRMSD/releases"

[tool.setuptools]
packages = ["bindingrmsd"]
include-package-data = true

[tool.setuptools.package-dir]
bindingrmsd = "bindingrmsd"

[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["bindingrmsd"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "--strict-markers --strict-config --disable-warnings"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["bindingrmsd"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
] 